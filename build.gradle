buildscript {
	ext {
		springBootVersion = '1.5.1.RELEASE'
	}
	repositories {
//		mavenCentral()
        maven {
            url "${nexusUrl}/repository/maven-public"
        }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'se.transmode.gradle:gradle-docker:1.2'
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'maven'
apply plugin: 'docker'

group = 'com.rsw'
version = '0.0.1'

jar {
	baseName = 'rsw-auth'
	version = '0.0.1'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

docker {
//    useApi true
//    hostUrl 'http://'
//    apiUsername 'user'
//    apiPassword 'password'
//    apiEmail 'mail@abc.com'
}

// tag can be set to a fully-qualified registry path + image name + version (v1)
// applicationName can be set to just the base name, e.g. rsw-auth + version (v1)
task buildDocker(type: Docker, dependsOn: build) {
    push = true
    // miniserver.local : Nexus hosted docker registry
    tag = "10.0.1.9:8082/rsw-auth"
    tagVersion = "v1"
    dockerfile = file('src/main/docker/Dockerfile')
    applicationName = jar.baseName
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

repositories {
//	mavenCentral()
    maven {
        url "${nexusUrl}/repository/maven-public"
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "${nexusUrl}/repository/maven-releases/") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
            snapshotRepository(url: "${nexusUrl}/repository/maven-snapshots") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
        }
    }
}

dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-oauth2')
	compile('org.springframework.cloud:spring-cloud-starter-security')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-redis')
    compile('org.springframework.session:spring-session')
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    compile group: 'org.postgresql', name: 'postgresql', version: '9.4.1212'
    compile('org.webjars:angularjs:1.4.3')
    compile('org.webjars:jquery:2.1.1')
    compile('org.webjars:bootstrap:3.2.0')
    compile('org.webjars:webjars-locator')
    testCompile('org.springframework.security:spring-security-test')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:Camden.SR4"
	}
}
